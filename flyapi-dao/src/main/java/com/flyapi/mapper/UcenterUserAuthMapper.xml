<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyapi.dao.UcenterUserAuthMapper">
  <resultMap id="BaseResultMap" type="com.flyapi.dao.model.UcenterUserAuth">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="oauth_id" jdbcType="VARCHAR" property="oauthId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="oauth_type" jdbcType="VARCHAR" property="oauthType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, oauth_id, open_id, oauth_type, create_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ucenter_user_auth
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ucenter_user_auth
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.flyapi.dao.model.UcenterUserAuth">
    insert into ucenter_user_auth (id, user_id, oauth_id, 
      open_id, oauth_type, create_time, 
      is_delete)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{oauthId,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{oauthType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.flyapi.dao.model.UcenterUserAuth">
    insert into ucenter_user_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="oauthId != null">
        oauth_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="oauthType != null">
        oauth_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="oauthId != null">
        #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null">
        #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flyapi.dao.model.UcenterUserAuth">
    update ucenter_user_auth
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="oauthId != null">
        oauth_id = #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null">
        oauth_type = #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flyapi.dao.model.UcenterUserAuth">
    update ucenter_user_auth
    set user_id = #{userId,jdbcType=BIGINT},
      oauth_id = #{oauthId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      oauth_type = #{oauthType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>